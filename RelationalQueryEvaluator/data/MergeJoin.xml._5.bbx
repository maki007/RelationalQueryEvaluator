operator main()->()
{
broadcast()->(){2} start;
TableScan()->(int) TableScan0(name="A",columns="a"); 
SortOperator(int)->(int) SortOperator1(sortedBy="",sortBy="0:D"); 
TableScan()->(int) TableScan2(name="B",columns="b"); 
SortOperator(int)->(int) SortOperator3(sortedBy="",sortBy="0:D"); 
MergeEquiJoin(int)(int)->(int,int) MergeEquiJoin4(left="0",right="1",out="0,1",leftPartOfCondition="0:D",rightPartOfCondition="1:D"); 
Store(int,int)->() storeResult(); 

source -> start
start[0] -> TableScan0;
TableScan0 -> SortOperator1;
start[1] -> TableScan2;
TableScan2 -> SortOperator3;
SortOperator1 -> [0]MergeEquiJoin4;
SortOperator3 -> [1]MergeEquiJoin4;
MergeEquiJoin4 -> storeResult;
storeResult -> output;
}