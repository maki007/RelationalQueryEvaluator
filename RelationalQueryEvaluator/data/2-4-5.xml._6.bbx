operator main()->()
{
broadcast()->(){6} start;
TableScan()->(int,int,date) TableScan0(name="orders",columns="o_custkey,o_orderkey,o_orderdate"); 
Filter(int,int,date)->(int,int,date) Filter1(condition="OP_AND(OP_LOWER_OR_EQUAL(OP_date_CONSTANT(20-11-2013),2),OP_LOWER(2,OP_date_CONSTANT(20-11-2014)))"); 
TableScan()->(int,int) TableScan2(name="region",columns="r_regionkey,r_name"); 
Filter(int,int)->(int,int) Filter3(condition="OP_EQUALS(1,OP_string_CONSTANT(Africa))"); 
TableScan()->(int,int,string) TableScan4(name="nation",columns="n_nationkey,n_regionkey,n_name"); 
HashJoin(int,int)(int,int,string)->(int,int,string,int,int) HashJoin5(left="3,4",right="0,1,2",out="0,1,2,3,4",leftPartOfCondition="3",rightPartOfCondition="1"); 
TableScan()->(int,int) TableScan6(name="supplier",columns="s_suppkey,s_nationkey"); 
HashJoin(int,int,string,int,int)(int,int)->(int,int,int,int,string,int,int) HashJoin7(left="2,3,4,5,6",right="0,1",out="0,1,2,3,4,5,6",leftPartOfCondition="1",rightPartOfCondition="2"); 
TableScan()->(int,int,int,int) TableScan8(name="lineitem",columns="l_orderkey,l_suppkey,l_extendedprice,l_discount"); 
HashJoin(int,int,int,int,string,int,int)(int,int,int,int)->(int,int,int,int,int,int,int,int,string,int,int) HashJoin9(left="4,5,6,7,8,9,10",right="0,1,2,3",out="0,1,2,3,4,5,6,7,8,9,10",leftPartOfCondition="1",rightPartOfCondition="4"); 
HashJoin(int,int,date)(int,int,int,int,int,int,int,int,string,int,int)->(int,int,date,int,int,int,int,int,int,int,int,string,int,int) HashJoin10(left="0,1,2",right="3,4,5,6,7,8,9,10,11,12,13",out="0,1,2,3,4,5,6,7,8,9,10,11,12,13",leftPartOfCondition="3",rightPartOfCondition="1"); 
TableScan()->(int,int) TableScan11(name="customer",columns="c_custkey,c_nationkey"); 
HashJoin(int,int,date,int,int,int,int,int,int,int,int,string,int,int)(int,int)->(int,int,int,int,date,int,int,int,int,int,int,int,int,string,int,int) HashJoin12(left="2,3,4,5,6,7,8,9,10,11,12,13,14,15",right="0,1",out="0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15",leftPartOfCondition="0,1",rightPartOfCondition="2,10"); 
ColumnsOperations(int,int,int,int,date,int,int,int,int,int,int,int,int,string,int,int)->(string,double) ColumnsOperations13(out="13,OP_TIMES(7,OP_MINUS(OP_double_CONSTANT(1),8))"); 
HashGroup(string,double)->(string,double) HashGroup14(groupBy="0",functions="sum(1)"); 
SortOperator(string,double)->(string,double) SortOperator15(sortedBy="",sortBy="1:D"); 
Store(string,double)->() storeResult(); 

source -> start
start[0] -> TableScan0;
TableScan0 -> Filter1;
start[1] -> TableScan2;
TableScan2 -> Filter3;
start[2] -> TableScan4;
Filter3 -> [0]HashJoin5;
TableScan4 -> [1]HashJoin5;
start[3] -> TableScan6;
HashJoin5 -> [0]HashJoin7;
TableScan6 -> [1]HashJoin7;
start[4] -> TableScan8;
HashJoin7 -> [0]HashJoin9;
TableScan8 -> [1]HashJoin9;
Filter1 -> [0]HashJoin10;
HashJoin9 -> [1]HashJoin10;
start[5] -> TableScan11;
HashJoin10 -> [0]HashJoin12;
TableScan11 -> [1]HashJoin12;
HashJoin12 -> ColumnsOperations13;
ColumnsOperations13 -> HashGroup14;
HashGroup14 -> SortOperator15;
SortOperator15 -> storeResult;
storeResult -> output;
}