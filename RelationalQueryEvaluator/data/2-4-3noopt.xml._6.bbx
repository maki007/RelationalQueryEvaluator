operator main()->()
{
broadcast()->(){3} start;
TableScan()->(int,int) TableScan0(name="customer",columns="c_custkey,c_mktsegment"); 
Filter(int,int)->(int,int) Filter1(condition="OP_EQUALS(1,OP_string_CONSTANT(SEGMENT))"); 
TableScan()->(int,int,int,int) TableScan2(name="orders",columns="o_orderdate,o_shippriority,o_orderkey,o_custkey"); 
Filter(int,int,int,int)->(int,int,int,int) Filter3(condition="OP_LOWER(0,OP_date_CONSTANT(today))"); 
HashJoin(int,int)(int,int,int,int)->(int,int,int,int,int,int) HashJoin4(left="0,1",right="2,3,4,5",out="0,1,2,3,4,5",leftPartOfCondition="0",rightPartOfCondition="5"); 
TableScan()->(int,int,int,int) TableScan5(name="lineitem",columns="l_orderkey,l_shipdate,l_extendedprice,l_discount"); 
Filter(int,int,int,int)->(int,int,int,int) Filter6(condition="OP_LOWER(OP_date_CONSTANT(today),1)"); 
HashJoin(int,int,int,int,int,int)(int,int,int,int)->(int,int,int,int,int,int,int,int,int,int) HashJoin7(left="0,1,6,7,8,9",right="2,3,4,5",out="0,1,2,3,4,5,6,7,8,9",leftPartOfCondition="8",rightPartOfCondition="2"); 
ColumnsOperations(int,int,int,int,int,int,int,int,int,int)->(int,int,int,double) ColumnsOperations8(out="2,6,7,OP_TIMES(4,OP_MINUS(OP_double_CONSTANT(1),5))"); 
HashGroup(int,int,int,double)->(int,int,int,double) HashGroup9(groupBy="0,1,2",functions="sum(3)"); 
SortOperator(int,int,int,double)->(int,int,int,double) SortOperator10(sortedBy="",sortBy="3:D,1:A"); 
Store(int,int,int,double)->() storeResult(); 

input -> start
start[0] -> TableScan0;
TableScan0 -> Filter1;
start[1] -> TableScan2;
TableScan2 -> Filter3;
Filter1 -> [0]HashJoin4;
Filter3 -> [1]HashJoin4;
start[2] -> TableScan5;
TableScan5 -> Filter6;
HashJoin4 -> [0]HashJoin7;
Filter6 -> [1]HashJoin7;
HashJoin7 -> ColumnsOperations8;
ColumnsOperations8 -> HashGroup9;
HashGroup9 -> SortOperator10;
SortOperator10 -> storeResult;
storeResult -> output;
}